version: '3.8'

services:
  # MySQL 服务
  mysql:
    image: mysql:8.0
    container_name: gochat_mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: gochat_im
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - gochat_network

  # Redis 服务
  redis:
    image: redis:6.2
    container_name: gochat_redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - gochat_network

  # Kafka 和 Zookeeper 服务
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: gochat_zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - gochat_network

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    container_name: gochat_kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - gochat_network

  # Elasticsearch 服务
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
    container_name: gochat_elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - gochat_network

  # Logstash 服务
  logstash:
    image: docker.elastic.co/logstash/logstash:7.14.0
    container_name: gochat_logstash
    depends_on:
      - elasticsearch
    volumes:
      - ./config/logstash/pipeline:/usr/share/logstash/pipeline
    ports:
      - "5044:5044"
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - gochat_network

  # Filebeat 服务
  filebeat:
    image: docker.elastic.co/beats/filebeat:7.14.0
    container_name: gochat_filebeat
    user: root
    volumes:
      - ./config/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - ./logs:/logs:ro
      - filebeat_data:/usr/share/filebeat/data
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - KIBANA_HOST=http://kibana:5601
    depends_on:
      - elasticsearch
      - logstash
    networks:
      - gochat_network

  # Kibana 服务 (用于可视化 Elasticsearch 数据)
  kibana:
    image: docker.elastic.co/kibana/kibana:7.14.0
    container_name: gochat_kibana
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      - gochat_network

  # Prometheus 服务
  prometheus:
    image: prom/prometheus:v2.30.3
    container_name: gochat_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - gochat_network

  # Grafana 服务 (用于可视化 Prometheus 数据)
  grafana:
    image: grafana/grafana:8.2.2
    container_name: gochat_grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - gochat_network

  # Nginx 服务
  nginx:
    image: nginx:1.21
    container_name: gochat_nginx
    ports:
      - "80:80"
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./config/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./static:/static
      - ./uploads:/uploads
    depends_on:
      - app
    networks:
      - gochat_network

  # 应用服务
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: gochat_app
    restart: always
    ports:
      - "8080:8080"
    volumes:
      - ./config:/app/config
      - ./logs:/app/logs
      - ./uploads:/app/uploads
      - ./static:/app/static
    depends_on:
      - mysql
      - redis
      - kafka
    networks:
      - gochat_network

networks:
  gochat_network:
    driver: bridge

volumes:
  mysql_data:
  redis_data:
  kafka_data:
  elasticsearch_data:
  prometheus_data:
  grafana_data:
  filebeat_data: